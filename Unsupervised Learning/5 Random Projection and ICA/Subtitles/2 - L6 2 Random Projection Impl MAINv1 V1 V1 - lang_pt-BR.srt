1
00:00:00,232 --> 00:00:02,656
A implementação
de projeção aleatória

2
00:00:02,689 --> 00:00:05,841
na scikit-learn é bem direta.

3
00:00:05,874 --> 00:00:10,663
Importamos a biblioteca aqui
e a declaramos.

4
00:00:10,696 --> 00:00:13,108
SparseRandomProjection
é a mais rápida.

5
00:00:13,141 --> 00:00:14,994
Temos uma projeção
aleatória gaussiana,

6
00:00:15,027 --> 00:00:16,507
uma projeção aleatória
esparsa.

7
00:00:16,540 --> 00:00:19,257
Isso tem uma performance
um pouco melhor.

8
00:00:19,290 --> 00:00:20,936
E depois fazermos
um fit_transform,

9
00:00:20,969 --> 00:00:22,581
passamos
nosso conjunto de dados

10
00:00:22,614 --> 00:00:24,340
e obtemos o novo
conjunto de dados.

11
00:00:24,373 --> 00:00:29,173
Se queremos declarar ou dar
um valor específico para epsilon,

12
00:00:29,206 --> 00:00:30,361
passamos aqui,

13
00:00:30,394 --> 00:00:31,921
ou se queremos forçar

14
00:00:31,954 --> 00:00:34,795
um tamanho ou número
de componentes específicos.

15
00:00:34,828 --> 00:00:36,520
Se não especificamos nada,

16
00:00:36,553 --> 00:00:40,907
o número de componentes
é automático, calculado com epsilon

17
00:00:40,940 --> 00:00:44,435
e usando o número de pontos
ou amostras do conjunto de dados.

18
00:00:44,468 --> 00:00:46,900
Ele escolhe isso
baseado no conjunto de dados.

