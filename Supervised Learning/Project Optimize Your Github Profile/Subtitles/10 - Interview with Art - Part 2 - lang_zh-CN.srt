1
00:00:00,420 --> 00:00:07,250
大家好 我和Art又和大家见面了
现在我想讨论下提交和提交信息

2
00:00:07,250 --> 00:00:12,020
我们将Git用作版本控制系统的其中一个主要原因
就是因为交付

3
00:00:12,020 --> 00:00:13,830
这样
你可以使其发生渐进变化

4
00:00:13,830 --> 00:00:17,400
每当你交付一次
你就会看到每次的变化

5
00:00:17,400 --> 00:00:20,350
其中很重要的一部分
便是提交信息

6
00:00:20,350 --> 00:00:24,800
那为什么提交信息的格式化
这么重要呢？

7
00:00:24,800 --> 00:00:28,269
我认为那就是
格式良好的提交信息

8
00:00:28,269 --> 00:00:32,432
我认为
开始行动的最重要的原因是

9
00:00:32,432 --> 00:00:36,529
当你阅读人们编译的代码或自己编译的代码时
你试图找出其中存在的问题

10
00:00:36,529 --> 00:00:39,250
尤其是当你正在寻找
漏洞时

11
00:00:39,250 --> 00:00:41,970
但有些人只想知道这行代码
会那样的原因

12
00:00:41,970 --> 00:00:43,432
是的
你将要面临的第一件事就是

13
00:00:43,432 --> 00:00:44,550
会受到斥责

14
00:00:44,550 --> 00:00:45,500
Awesome 工具

15
00:00:45,500 --> 00:00:47,787
不仅会向你展示代码提交者
也会展示提交信息

16
00:00:47,787 --> 00:00:52,057
如果该信息就像添加的代码一样
该工具不会向你

17
00:00:52,057 --> 00:00:55,910
提供代码发生变化的原因
也不会展示它原本存在的原因

18
00:00:55,910 --> 00:00:58,140
这点极其重要

19
00:00:58,140 --> 00:01:01,450
当你在各个阶段对你的代码进行维护时
这点对你而言极其重要

20
00:01:01,450 --> 00:01:05,372
在对你的代码进行维护过程中
这点对跟着你的人们而言也极其重要

21
00:01:05,372 --> 00:01:10,210
真有意思
当我查看求职者的作品时

22
00:01:10,210 --> 00:01:15,170
当我查阅他们的GitHub时
我会稍微看一下他们

23
00:01:15,170 --> 00:01:16,210
在各自的
提交信息里

24
00:01:16,210 --> 00:01:17,160
表达的有多全面和有多好

25
00:01:17,160 --> 00:01:17,950
这点非常重要。

