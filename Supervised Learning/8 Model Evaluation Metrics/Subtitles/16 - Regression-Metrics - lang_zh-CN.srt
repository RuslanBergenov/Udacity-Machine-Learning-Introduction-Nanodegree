1
00:00:00,280 --> 00:00:04,129
现在我们来学习用于评估回归模型的指标

2
00:00:04,129 --> 00:00:06,960
第一个称为平均绝对误差

3
00:00:06,960 --> 00:00:08,779
在这个示例中 我们有一些点

4
00:00:08,779 --> 00:00:11,489
并画了一条拟合这些点的线

5
00:00:11,490 --> 00:00:13,830
现在 我们想检查这条直线的误差如何

6
00:00:13,830 --> 00:00:16,600
一个好方法就是将点到线的

7
00:00:16,600 --> 00:00:19,330
距离的绝对值求和

8
00:00:19,329 --> 00:00:22,250
平均绝对误差在 Sklearn 中很容易计算

9
00:00:22,250 --> 00:00:26,314
在这个示例中 我们要做的是创建一个线性回归分类器对象

10
00:00:26,314 --> 00:00:27,910
称为 classifier

11
00:00:27,910 --> 00:00:30,750
然后用函数来拟合这条直线

12
00:00:30,750 --> 00:00:32,770
现在 我们用 y 表示点

13
00:00:32,770 --> 00:00:37,740
用 classifier.predict(X) 表示模型所作的预测

14
00:00:37,740 --> 00:00:39,300
称之为 guesses

15
00:00:39,299 --> 00:00:43,250
最后 平均绝对误差就用

16
00:00:43,250 --> 00:00:45,149
平均绝对误差函数来计算

17
00:00:45,149 --> 00:00:46,670
平均绝对误差有一个问题

18
00:00:46,670 --> 00:00:49,649
即绝对值函数是不可微分的

19
00:00:49,649 --> 00:00:53,170
这不利于我们使用诸如梯度下降等方法

20
00:00:53,170 --> 00:00:57,870
要解决这个问题 我们使用更常见的均方误差

21
00:00:57,869 --> 00:01:02,039
对于此度量 我们添加点和线之间的距离

22
00:01:02,039 --> 00:01:03,320
的平方

23
00:01:03,320 --> 00:01:06,500
均方误差也很容易在 Sklearn 中计算

24
00:01:06,500 --> 00:01:09,560
只是现在 我们要使用 mean_squared_error 函数

25
00:01:10,849 --> 00:01:14,500
现在我们学习一个非常常见的回归度量 称为“R2 分数”

26
00:01:14,500 --> 00:01:18,250
R2 分数通过将我们的模型与最简单的可能模型相比得出

27
00:01:18,250 --> 00:01:19,359
那么思考一下

28
00:01:19,359 --> 00:01:23,789
拟合一堆点的最简单的可能模型是什么呢？

29
00:01:23,790 --> 00:01:27,920
那就是取所有值的平均值 然后

30
00:01:27,920 --> 00:01:29,930
画一条穿过它们的水平直线

31
00:01:29,930 --> 00:01:32,410
然后我们可以计算出这个模型的均方误差

32
00:01:32,409 --> 00:01:34,689
已知 简单模型的均方误差

33
00:01:34,689 --> 00:01:39,539
大于线性回归模型的误差

34
00:01:39,540 --> 00:01:41,859
那么问题是大多少？

35
00:01:41,859 --> 00:01:43,780
我们可以用线性回归模型的误差

36
00:01:43,780 --> 00:01:48,670
除以简单模型的误差 然后

37
00:01:48,670 --> 00:01:52,689
用 1 减这个结果 我们称之为 R2 分数

38
00:01:52,689 --> 00:01:57,319
如果这个模型不太好 这两个误差将很接近

39
00:01:57,319 --> 00:02:01,109
而这个量应接近 1

40
00:02:01,109 --> 00:02:04,099
那么整个 R2 分数应接近 0

41
00:02:04,099 --> 00:02:08,310
如果模型较好 那么线性回归模型对的均方误差

42
00:02:08,310 --> 00:02:12,849
应比简单模型的均方误差小很多

43
00:02:12,849 --> 00:02:15,719
那么这个比例就很小

44
00:02:15,719 --> 00:02:19,229
而 R2 分数将非常接近 1

45
00:02:19,229 --> 00:02:22,869
总结来说 如果 R2 分数接近 1 模型就不错

46
00:02:22,870 --> 00:02:25,770
如果接近 0 那么模型

47
00:02:25,770 --> 00:02:29,250
基本相当于用点的平均值来猜测

48
00:02:29,250 --> 00:02:34,435
使用 sklearn 中的 r2_score 函数 很容易计算 R2 分数

49
00:02:34,435 --> 00:02:37,699
这里是一个小示例 我们计算了

50
00:02:37,699 --> 00:02:40,799
蓝色的真值和绿色的预测值之间的 R2 分数

