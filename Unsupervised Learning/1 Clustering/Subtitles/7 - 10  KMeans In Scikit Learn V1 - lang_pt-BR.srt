1
00:00:00,332 --> 00:00:03,709
Na próxima página,
você verá um notebook

2
00:00:04,252 --> 00:00:05,709
chamado "Changing K".

3
00:00:05,742 --> 00:00:11,314
O que gosto de fazer
é abrir isso em uma nova aba

4
00:00:11,755 --> 00:00:16,034
e, assim, você verá
que ele é aberto em segundo plano,

5
00:00:16,067 --> 00:00:19,459
mas o notebook que queremos
é este, "Changing K".

6
00:00:19,492 --> 00:00:24,827
Nele, vamos analisar
como ajustar o algoritmo k-means

7
00:00:24,860 --> 00:00:26,317
a um conjunto
de pontos de dados.

8
00:00:26,350 --> 00:00:28,438
Neste caso, a primeira coisa
que devemos fazer

9
00:00:28,471 --> 00:00:30,731
é importar as bibliotecas
necessárias.

10
00:00:30,764 --> 00:00:35,723
Depois, com as nossas bibliotecas,
vamos ver a primeira pergunta.

11
00:00:35,756 --> 00:00:38,186
Ela diz que queremos
simular dados,

12
00:00:38,219 --> 00:00:41,024
e vamos usar essa ferramenta
de ajuda para isso.

13
00:00:41,057 --> 00:00:44,659
Primeiro, precisamos
ler a documentação

14
00:00:44,692 --> 00:00:47,739
para entendermos
como usar essa função.

15
00:00:47,772 --> 00:00:50,322
Se expandirmos essa célula,

16
00:00:50,355 --> 00:00:54,401
vemos que há a função
de dados simulados.

17
00:00:54,434 --> 00:00:58,633
Ela vai simular N pontos
com quaisquer características

18
00:00:58,667 --> 00:01:00,100
que estiverem listadas aqui

19
00:01:00,133 --> 00:01:04,802
e com o número de centroides
usados na criação dos dados.

20
00:01:04,835 --> 00:01:09,000
Essa é uma função útil para simular
rapidamente os dados que queremos.

21
00:01:09,498 --> 00:01:12,345
Neste exemplo em particular,
queremos 200 pontos,

22
00:01:12,378 --> 00:01:15,034
5 características
e 4 centros.

23
00:01:15,067 --> 00:01:18,186
Então vamos criar
esse conjunto de dados.

24
00:01:18,219 --> 00:01:21,290
Certo, 200 pontos,
5 características

25
00:01:21,323 --> 00:01:23,577
e 4 centros.

26
00:01:23,610 --> 00:01:25,985
Deve ser "h.". Pronto.

27
00:01:26,018 --> 00:01:28,168
Estamos prontos
para prosseguir.

28
00:01:28,201 --> 00:01:31,385
Não esqueça desse "h", porque
estamos lendo do arquivo de ajuda.

29
00:01:31,418 --> 00:01:34,834
Como ajustamos esse modelo
com 4 centros,

30
00:01:34,867 --> 00:01:37,201
ele quer saber
qual deve ser o valor de "k".

31
00:01:37,234 --> 00:01:39,254
O valor de "k" deve ser 4.

32
00:01:39,287 --> 00:01:42,136
Se expandirmos essa célula,
veremos que está correto.

33
00:01:42,169 --> 00:01:47,217
Depois, vamos executar o algoritmo
k-means no conjunto de dados

34
00:01:47,250 --> 00:01:50,865
para ver o que acontece
se tivermos 4 centroides.

35
00:01:50,898 --> 00:01:55,122
Isso nos dá uma ideia
de como deve ser o processo.

36
00:01:55,155 --> 00:01:57,360
Primeiro, temos que instanciar
o nosso modelo.

37
00:01:57,393 --> 00:02:01,014
Depois, ajustá-lo aos dados
e prever os rótulos para os dados.

38
00:02:01,047 --> 00:02:04,807
Por fim, o último passo
é diagramar os dados.

39
00:02:04,840 --> 00:02:07,997
Aqui, instanciamos.
Depois, ajustamos.

40
00:02:08,030 --> 00:02:10,777
Prevemos e, por fim,
diagramamos os dados.

41
00:02:10,810 --> 00:02:13,101
Esse é o processo básico
que devemos seguir

42
00:02:13,134 --> 00:02:16,429
com qualquer algoritmo
não supervisionado que veremos.

43
00:02:16,462 --> 00:02:19,468
A primeira coisa a se fazer
deve ser olhar a documentação.

44
00:02:19,501 --> 00:02:23,021
Note que eu li aqui,
mas uma rápida busca no Google

45
00:02:23,054 --> 00:02:25,548
nos mostra a documentação
do k-means.

46
00:02:25,581 --> 00:02:28,916
Note que importamos
a biblioteca sklearn.cluster,

47
00:02:28,949 --> 00:02:30,829
importamos esse módulo.

48
00:02:30,862 --> 00:02:35,274
Essencialmente, o k-means pega
um número de clusters

49
00:02:35,307 --> 00:02:39,235
e um monte de outras coisas com
as quais não temos que nos envolver.

50
00:02:39,268 --> 00:02:43,644
O principal é pegar o k-means
com 4 centroides.

51
00:02:43,677 --> 00:02:48,572
Se voltarmos aqui e ajustarmos
o algoritmo k-means

52
00:02:48,605 --> 00:02:54,539
atribuindo 4 aqui,
em seguida ajustamos o modelo e...

53
00:02:55,106 --> 00:03:00,090
Na documentação, também encontramos
todos os métodos disponíveis.

54
00:03:00,123 --> 00:03:02,908
Note que eles têm k-means.

55
00:03:02,941 --> 00:03:04,604
Aqui eles usaram
uma predição.

56
00:03:04,637 --> 00:03:06,331
Eles obtiveram
rótulos diferentes.

57
00:03:06,364 --> 00:03:11,100
Há um fit predict.
Há várias coisas na documentação.

58
00:03:11,133 --> 00:03:12,986
Eu vou mostrar
como isso funciona.

59
00:03:13,019 --> 00:03:16,307
Depois de fazer isso algumas vezes,
torna-se natural.

60
00:03:16,340 --> 00:03:21,400
Então, vamos ajustar
ao nosso conjunto de dados.

61
00:03:21,433 --> 00:03:24,933
Depois, vamos prever
os rótulos.

62
00:03:25,480 --> 00:03:30,379
Você pode fazer tudo de uma vez,
se quiser, usando o fit predict.

63
00:03:31,677 --> 00:03:33,770
Isso é chamado de "kmeans_4"

64
00:03:33,803 --> 00:03:39,604
e, para isso aqui, eu vou usar
o modelo que criei, o "model_4".

65
00:03:40,047 --> 00:03:43,099
Eu ajustei o modelo
e o armazenei aqui.

66
00:03:43,132 --> 00:03:45,604
Depois, usei o modelo
para prever os dados.

67
00:03:46,288 --> 00:03:49,858
Eu instanciei,
ajustei o modelo aos dados,

68
00:03:49,891 --> 00:03:53,041
peguei o modelo e o usei
para prever no conjunto de dados.

69
00:03:53,074 --> 00:03:54,441
Esse é o processo habitual.

70
00:03:54,474 --> 00:03:58,635
Instancie, use o modelo instanciado
para ajustá-lo aos dados

71
00:03:58,668 --> 00:04:03,513
e use o modelo que você criou
para prever no conjunto de dados.

72
00:04:03,546 --> 00:04:08,139
Aqui, observe que cada cor
é o que o modelo previu,

73
00:04:08,172 --> 00:04:10,131
a quais clusters
esses pontos pertencem.

74
00:04:10,164 --> 00:04:12,427
Na próxima página,
você fará isso sozinho

75
00:04:12,460 --> 00:04:15,467
e verá o que acontece
quando você cria não com 4,

76
00:04:15,500 --> 00:04:17,667
mas com diferentes
números de clusters.

