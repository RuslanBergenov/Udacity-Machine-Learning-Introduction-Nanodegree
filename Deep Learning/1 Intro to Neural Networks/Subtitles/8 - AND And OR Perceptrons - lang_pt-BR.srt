1
00:00:00,367 --> 00:00:02,534
Algo interessante sobre
os perceptrons

2
00:00:02,568 --> 00:00:05,167
é que as operações lógicas
podem ser representadas

3
00:00:05,201 --> 00:00:06,634
como perceptrons.

4
00:00:06,668 --> 00:00:09,801
Aqui, por exemplo,
temos o operador AND.

5
00:00:09,835 --> 00:00:11,234
Como ele funciona?

6
00:00:11,268 --> 00:00:15,701
Ele pega duas entradas
e retorna uma saída.

7
00:00:15,735 --> 00:00:19,000
Mas a saída
só será verdadeira

8
00:00:19,034 --> 00:00:21,430
se as duas entradas
forem verdadeiras.

9
00:00:21,767 --> 00:00:24,968
Se elas forem verdadeira
e verdadeira,

10
00:00:25,002 --> 00:00:26,434
a saída será verdadeira.

11
00:00:27,100 --> 00:00:29,234
Se as entradas forem
verdadeira e falsa,

12
00:00:29,268 --> 00:00:30,667
a saída será falsa.

13
00:00:31,601 --> 00:00:34,334
Se as entradas forem
falsa e verdadeira,

14
00:00:34,368 --> 00:00:35,801
a saída será falsa.

15
00:00:36,501 --> 00:00:39,467
Por fim, se as entradas forem
falsa e falsa,

16
00:00:39,501 --> 00:00:40,934
a saída será falsa.

17
00:00:42,033 --> 00:00:44,200
Como transformamos isso
em um perceptron?

18
00:00:44,234 --> 00:00:47,167
Primeiro nós transformamos
a tabela de verdadeiro e falso

19
00:00:47,201 --> 00:00:49,167
em uma tabela
de zeros e uns,

20
00:00:49,201 --> 00:00:51,167
na qual o um
corresponde a verdadeiro

21
00:00:51,201 --> 00:00:54,067
e zero, a falso.

22
00:00:54,101 --> 00:00:57,901
Nós desenhamos este perceptron
que funciona como antes.

23
00:00:57,935 --> 00:01:01,267
Há uma linha definida por pesos
e vieses e uma área positiva,

24
00:01:01,301 --> 00:01:03,601
que está pintada de azul,
e uma área negativa,

25
00:01:03,635 --> 00:01:05,334
que está
pintada de vermelha.

26
00:01:05,368 --> 00:01:08,000
Este perceptron colocará
cada ponto,

27
00:01:08,034 --> 00:01:11,334
e, se estiverem na área
positiva, ele retorna um,

28
00:01:11,368 --> 00:01:14,133
se estiverem na negativa,
ele retorna zero.

29
00:01:14,868 --> 00:01:16,200
Vamos tentar.

30
00:01:16,234 --> 00:01:18,667
O 1,1 vai
para a área positiva,

31
00:01:18,701 --> 00:01:20,467
então o perceptron
devolve um.

32
00:01:22,367 --> 00:01:25,334
O 1,0 vai
para a área negativa,

33
00:01:25,368 --> 00:01:27,367
então o perceptron devolve
um zero.

34
00:01:28,200 --> 00:01:31,100
O 0,1 é colocado
na área negativa,

35
00:01:31,134 --> 00:01:34,300
então o perceptron
retorna um zero.

36
00:01:34,334 --> 00:01:38,200
Por fim, o 0,0
também vai para a área negativa,

37
00:01:38,234 --> 00:01:40,200
então o perceptron
retorna um zero.

38
00:01:41,667 --> 00:01:44,601
Os operadores lógicos podem
se tornar perceptrons.

39
00:01:44,635 --> 00:01:46,534
Aqui nós temos
o operador OR,

40
00:01:46,568 --> 00:01:47,934
que retorna verdadeiro

41
00:01:47,968 --> 00:01:50,300
se uma das entradas
for verdadeira.

42
00:01:50,334 --> 00:01:54,000
Isso se transforma nesta tabela,
que se torna este perceptron

43
00:01:54,034 --> 00:01:56,200
parecido com o anterior,

44
00:01:56,234 --> 00:01:59,734
mas as linhas têm peso
e viés diferentes.

45
00:01:59,768 --> 00:02:03,100
Quais são os pesos e vieses
para os perceptron AND e OR?

46
00:02:03,134 --> 00:02:05,601
Você poderá usá-los
no questionário abaixo.

