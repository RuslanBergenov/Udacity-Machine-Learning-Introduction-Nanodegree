1
00:00:00,000 --> 00:00:02,339
As an optional portion to this project,

2
00:00:02,339 --> 00:00:06,609
you can test your skills in our ML Charity Competition on Kaggle.

3
00:00:06,610 --> 00:00:08,009
In this screen cast,

4
00:00:08,009 --> 00:00:12,199
I'll show you how to get started with making your predictions on the Kaggle platform.

5
00:00:12,199 --> 00:00:15,734
First, you will need to sign in or create an account.

6
00:00:15,734 --> 00:00:17,474
Don't worry, it's free.

7
00:00:17,475 --> 00:00:20,550
Once you've logged in, you can see an overview of

8
00:00:20,550 --> 00:00:24,005
basically how this project is run on this first page here.

9
00:00:24,004 --> 00:00:26,039
You should already be pretty familiar with

10
00:00:26,039 --> 00:00:29,199
the dataset as it's the same one that you used in the project.

11
00:00:29,199 --> 00:00:31,314
If we look at the data portion,

12
00:00:31,315 --> 00:00:36,085
you'll see that there are three files here to assist you in completing this competition.

13
00:00:36,085 --> 00:00:41,054
The census.csv file is the exact same one you used throughout the project.

14
00:00:41,054 --> 00:00:42,969
There are two additional files,

15
00:00:42,969 --> 00:00:48,405
this test_census.csv looks a lot like the census CSV file,

16
00:00:48,405 --> 00:00:52,530
but it has the response value removed from the dataset.

17
00:00:52,530 --> 00:00:54,679
That's something that you'll want to predict and

18
00:00:54,679 --> 00:00:57,505
then be able to submit into the competition.

19
00:00:57,505 --> 00:01:01,010
The example submission file shows you exactly the way that

20
00:01:01,009 --> 00:01:04,429
your results should be submitted into the Kaggle competition.

21
00:01:04,430 --> 00:01:07,510
There are two ways that you can work with these datasets.

22
00:01:07,510 --> 00:01:12,015
The first way is you can download them and just work with them from your local machine.

23
00:01:12,015 --> 00:01:14,415
The second way is that you can do things through

24
00:01:14,415 --> 00:01:17,500
kernels on the Kaggle competition platform.

25
00:01:17,500 --> 00:01:19,319
By doing things in kernels,

26
00:01:19,319 --> 00:01:23,429
you allow the community as well as your peers to understand how

27
00:01:23,430 --> 00:01:27,930
you solve the problems and to learn from what you put together in your notebook.

28
00:01:27,930 --> 00:01:30,645
When you work with the Kaggle kernel,

29
00:01:30,644 --> 00:01:32,700
you'll notice that you have access to

30
00:01:32,700 --> 00:01:36,415
the files that were available in the data portion earlier.

31
00:01:36,415 --> 00:01:41,850
So, notice that this is exactly like what you used before and then if we have

32
00:01:41,849 --> 00:01:45,179
the test data and then you'll notice that

33
00:01:45,180 --> 00:01:47,940
the test data is going to be what you're

34
00:01:47,939 --> 00:01:50,819
going to want to predict this income column with.

35
00:01:50,819 --> 00:01:55,589
So down here, they don't have the income column because that's what you're going to

36
00:01:55,590 --> 00:02:00,450
predict and then essentially what you want your final results to look like,

37
00:02:00,450 --> 00:02:05,670
is you want this unnamed index column along with what you'd predict for

38
00:02:05,670 --> 00:02:11,300
that column and you'll only submit that in for your submissions for the competition.

39
00:02:11,300 --> 00:02:13,500
If you go back to the leader board,

40
00:02:13,500 --> 00:02:17,164
you'll notice that if you strictly submit the example submission,

41
00:02:17,164 --> 00:02:19,264
you'll end up with a score of 0.5.

42
00:02:19,264 --> 00:02:22,289
Hopefully, by building a machine learning model,

43
00:02:22,289 --> 00:02:24,254
you can actually beat that metric.

44
00:02:24,254 --> 00:02:27,794
Once you feel like you are confident with your result,

45
00:02:27,794 --> 00:02:32,619
there's a submit predictions button and you can simply upload your submission file.

46
00:02:32,620 --> 00:02:38,245
Remember, it will need to be in the same format as this example submissions file.

47
00:02:38,245 --> 00:02:41,110
So, if you download this.

48
00:02:41,110 --> 00:02:43,950
So, you'll want your submission file to look like this,

49
00:02:43,949 --> 00:02:47,319
where it has an Id column which is basically just the row

50
00:02:47,319 --> 00:02:52,594
Id and then whether they're an income bracket one or income bracket zero.

51
00:02:52,594 --> 00:02:55,419
So, you can see that in the test submission,

52
00:02:55,419 --> 00:02:57,609
they just predict everything to be a one but

53
00:02:57,610 --> 00:02:59,860
you'll want to have some of those be ones and some of

54
00:02:59,860 --> 00:03:04,825
them be zeros based on the row and what you think that row should be.

55
00:03:04,824 --> 00:03:07,574
If we look at the directions down here,

56
00:03:07,574 --> 00:03:08,879
you'll notice that it says,

57
00:03:08,879 --> 00:03:12,500
"Zero values indicate the individuals make less than 50 K and

58
00:03:12,500 --> 00:03:16,370
one are for the values in the test set that make more than 50 K." You don't

59
00:03:16,370 --> 00:03:19,640
want to basically change that file so that some are ones and some are

60
00:03:19,639 --> 00:03:24,454
zeros and you'll predict those ones and zeros based on some machine learning model.

61
00:03:24,455 --> 00:03:27,070
Good luck and I hope you enjoy the competition.

