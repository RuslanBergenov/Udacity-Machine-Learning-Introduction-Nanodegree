1
00:00:00,000 --> 00:00:03,575
预测的结果就是通过算法计算后得到的结果

2
00:00:03,575 --> 00:00:06,220
离散答案就是 “是” 或者 “否” 的形式

3
00:00:06,219 --> 00:00:08,256
而连续答案将是一个数字

4
00:00:08,256 --> 00:00:11,615
通常在 0 到 1 的范围之间 我们称之为概率

5
00:00:11,615 --> 00:00:13,224
在这个例子中

6
00:00:13,224 --> 00:00:16,664
蓝色表示被录取的学生 红色表示被拒的学生

7
00:00:16,664 --> 00:00:21,035
离散算法将告诉我们学生是录取还是被拒了

8
00:00:21,035 --> 00:00:25,679
用 0 表示被拒 用 1 表示被录取

9
00:00:25,678 --> 00:00:27,273
另一方面

10
00:00:27,274 --> 00:00:29,833
点离黑线越远

11
00:00:29,835 --> 00:00:32,505
它的概率就越大

12
00:00:32,505 --> 00:00:36,240
完全位于蓝色区域的点概率很高

13
00:00:36,240 --> 00:00:40,050
例如这个点有 85% 的概率是蓝色

14
00:00:40,048 --> 00:00:43,884
完全位于红色区域的点概率很低

15
00:00:43,884 --> 00:00:48,158
例如位于图底部的这个点有 20% 的概率是蓝色

16
00:00:48,158 --> 00:00:53,429
位于直线上的点都有 50% 的概率位于蓝色区域

17
00:00:53,429 --> 00:00:57,335
可以看出 概率是关于点离直线距离的函数

18
00:00:57,335 --> 00:01:00,390
从离散到连续预测的方法是

19
00:01:00,390 --> 00:01:05,075
将激活函数从左侧的阶跃函数

20
00:01:05,075 --> 00:01:07,655
变成右侧的 s 函数

21
00:01:07,655 --> 00:01:10,608
对 s 函数输入较大的正数

22
00:01:10,608 --> 00:01:14,628
将给出非常接近 1 的值

23
00:01:14,629 --> 00:01:19,219
输入较大的负数则给出非常接近 0 的值

24
00:01:19,218 --> 00:01:22,030
对于接近 0 的数字

25
00:01:22,030 --> 00:01:25,599
将给出接近 0.5 的值

26
00:01:25,599 --> 00:01:32,683
s 函数的表达式为 σ(x) = 1/(1 + exp(-x))

27
00:01:32,685 --> 00:01:38,245
之前我们的模型是一条直线和正负区域

28
00:01:38,245 --> 00:01:42,010
现在则包含了整个概率空间

29
00:01:42,010 --> 00:01:46,045
或者说 对于平面中每个点

30
00:01:46,045 --> 00:01:47,969
都能用概率表示它的归属 1 代表蓝点 0 代表红点

31
00:01:47,968 --> 00:01:51,369
例如 对于这个点

32
00:01:51,370 --> 00:01:55,850
属于蓝色和红色区域的概率各是 50%

33
00:01:55,849 --> 00:02:00,509
对于这个点 属于蓝色的概率是 40%

34
00:02:00,510 --> 00:02:02,975
属于红色的概率是 60%

35
00:02:02,974 --> 00:02:06,445
对于这个点 属于蓝色概率是 30%

36
00:02:06,447 --> 00:02:08,468
属于红色概率是 70%

37
00:02:08,468 --> 00:02:11,438
对于这个点 属于蓝色概率是 80%

38
00:02:11,438 --> 00:02:14,655
属于红色概率是 20%

39
00:02:14,655 --> 00:02:17,360
获得这种概率空间的方法很简单

40
00:02:17,360 --> 00:02:22,800
我们只是将线性方程 WX + b 的结果输入 s 函数

41
00:02:22,800 --> 00:02:27,830
左侧是表示 WX + b 分别等于

42
00:02:27,830 --> 00:02:32,630
0 1 2 -1 -2 等等的直线

43
00:02:32,628 --> 00:02:36,929
对平面中的每个值应用 s 型函数后

44
00:02:36,930 --> 00:02:40,515
获得每个点的数字（0 到 1 之间）

45
00:02:40,514 --> 00:02:44,074
这些数字表示该点属于蓝色的概率

46
00:02:44,074 --> 00:02:46,439
这个概率是

47
00:02:46,438 --> 00:02:50,453
预测模型：ŷ = σ(Wx + b) 的结果

48
00:02:50,455 --> 00:02:53,415
可以看出 每个线性估计部分的值分别是 0.5

49
00:02:53,413 --> 00:02:55,258
0.6 和 0.7

50
00:02:55,258 --> 00:02:58,418
0.4 0.3 等等

51
00:02:58,419 --> 00:03:01,539
当我们越往蓝色区域前进

52
00:03:01,538 --> 00:03:04,905
σ(Wx + b) 就越来越接近 1

53
00:03:04,905 --> 00:03:07,740
越往红色区域前进

54
00:03:07,740 --> 00:03:11,115
σ(Wx + b) 就越接近 0

55
00:03:11,115 --> 00:03:13,240
点位于中央直线时

56
00:03:13,240 --> 00:03:15,120
Wx + b 为 0

57
00:03:15,120 --> 00:03:19,319
意味着 σ(Wx + b) 刚好是 0.5

58
00:03:19,318 --> 00:03:21,383
左图是原来的感知器

59
00:03:21,383 --> 00:03:24,250
激活函数是阶跃函数

60
00:03:24,250 --> 00:03:26,669
右侧是新的感知器

61
00:03:26,669 --> 00:03:29,944
激活函数是 s 函数

62
00:03:29,943 --> 00:03:31,983
新的感知器

63
00:03:31,985 --> 00:03:33,195
接收输入数据后

64
00:03:33,193 --> 00:03:38,300
将数据乘以箭头边上所示的权重 并将结果相加

65
00:03:38,300 --> 00:03:40,934
然后应用 s 型函数

66
00:03:40,935 --> 00:03:45,170
得到的结果不再是之前那样的 1 或 0

67
00:03:45,169 --> 00:03:49,984
而是返回一个介于 0 到 1 之间的值 例如 0.99 0.67 等等

68
00:03:49,985 --> 00:03:53,285
之前可以说学生是否被录取

69
00:03:53,283 --> 00:03:58,000
现在是说的是学生被录取的概率有多大

