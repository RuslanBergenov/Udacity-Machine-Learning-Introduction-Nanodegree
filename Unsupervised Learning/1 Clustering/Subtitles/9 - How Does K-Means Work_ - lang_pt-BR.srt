1
00:00:01,004 --> 00:00:04,036
COMO O K-MEANS FUNCIONA?

2
00:00:04,629 --> 00:00:08,683
Você já viu as principais ideias
associadas ao k-means.

3
00:00:08,716 --> 00:00:12,170
De compreender o agrupamento
como aprendizagem não supervisionada

4
00:00:12,203 --> 00:00:14,811
a escolher o número
apropriado de clusters.

5
00:00:15,023 --> 00:00:18,011
Mas como criamos um algoritmo
que descubra

6
00:00:18,044 --> 00:00:21,379
onde estão os centros do cluster
nesses clusters?

7
00:00:21,660 --> 00:00:24,307
Vamos analisar
como isso funciona.

8
00:00:24,340 --> 00:00:26,515
Vamos usar esse diagrama
como exemplo

9
00:00:26,548 --> 00:00:30,259
e seguir passo a passo pelo
funcionamento do algoritmo k-means.

10
00:00:30,594 --> 00:00:35,200
Quando começamos, temos apenas
pontos sem agrupamentos.

11
00:00:35,233 --> 00:00:37,795
Iniciamos o k-means
adicionando aleatoriamente

12
00:00:37,828 --> 00:00:39,650
pontos "k" no diagrama,

13
00:00:39,683 --> 00:00:43,130
onde "k" é o número de clusters
que você quer obter.

14
00:00:43,163 --> 00:00:46,292
Chamamos cada um desses pontos "k"
de "centroides".

15
00:00:46,325 --> 00:00:49,194
Eles são colocados aleatoriamente
entre os dados.

16
00:00:49,227 --> 00:00:50,683
Então precisamos movê-los.

17
00:00:50,716 --> 00:00:54,155
Fazemos isso atribuindo
cada ponto do conjunto

18
00:00:54,188 --> 00:00:55,898
ao centroide mais próximo.

19
00:00:55,931 --> 00:00:59,067
Agora que sabemos quais pontos
pertencem a quais grupos,

20
00:00:59,100 --> 00:01:01,874
movemos os centroides
para o centro desses pontos.

21
00:01:01,907 --> 00:01:04,866
Após o centroide ter se movido,
alguns pontos talvez fiquem

22
00:01:04,899 --> 00:01:07,675
mais próximos
do centroide de outro grupo.

23
00:01:07,708 --> 00:01:12,403
Agora, vamos calcular a distância
de cada ponto a cada centroide

24
00:01:12,436 --> 00:01:15,747
e, de novo, atribuir cada ponto
ao centroide mais próximo.

25
00:01:16,139 --> 00:01:18,131
Com essa nova
distribuição de pontos,

26
00:01:18,164 --> 00:01:21,114
vamos mover de novo o centroide
para o centro dos pontos

27
00:01:21,147 --> 00:01:23,131
atribuídos a ele.

28
00:01:23,164 --> 00:01:27,530
Esse processo vai continuar
até o centroide não se mover mais.

29
00:01:27,563 --> 00:01:29,227
Isso finaliza a nossa busca.

30
00:01:29,260 --> 00:01:33,035
Aqui, temos esse número "k"
de clusters como o resultado final.

