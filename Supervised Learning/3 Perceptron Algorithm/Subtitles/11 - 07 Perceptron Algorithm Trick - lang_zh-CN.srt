1
00:00:00,000 --> 00:00:03,924
现在我来向你展示一个技巧 可以使这条线段更加靠近这个点

2
00:00:03,924 --> 00:00:06,089
假如我们有线性方程式

3
00:00:06,089 --> 00:00:09,019
3x1 + 4x2 -10

4
00:00:09,019 --> 00:00:11,809
这个线性方程式得到一条线段

5
00:00:11,810 --> 00:00:15,054
标明了方程式等于 0 和两个区域

6
00:00:15,054 --> 00:00:19,949
正数区域为蓝色 其中 3x1 + 4x2 - 10 为正

7
00:00:19,949 --> 00:00:26,750
负数区域为红色 其中 3x1 + 4x2 - 10 为负

8
00:00:26,750 --> 00:00:29,341
这里我们有个单独未分类的一个点 (4,5)

9
00:00:29,341 --> 00:00:32,460
这个红点位于蓝色区域

10
00:00:32,460 --> 00:00:35,039
而且要逐渐靠近直线

11
00:00:35,039 --> 00:00:38,310
那么我们如何让这个点更加靠近直线呢？

12
00:00:38,310 --> 00:00:42,570
我们有 4 和 5 利用这个点修改

13
00:00:42,570 --> 00:00:48,195
线性方程 从而让这条线更加靠近这个点

14
00:00:48,195 --> 00:00:50,509
这里参数是 3 4 和 -10

15
00:00:50,509 --> 00:00:54,579
点的坐标是 4 和 5

16
00:00:54,579 --> 00:00:57,640
我们也增加 1 作为偏置单元

17
00:00:57,640 --> 00:01:02,620
我们要做的是从线段的参数中减去这些数字 得到 3-4

18
00:01:02,619 --> 00:01:06,003
4-5 和 -10-1

19
00:01:06,004 --> 00:01:13,045
这条新线段的参数是 -1 -1 和 -11

20
00:01:13,045 --> 00:01:15,394
并且大幅向这个点靠近

21
00:01:15,394 --> 00:01:19,009
也许甚至越过它 使它处在正确的区域

22
00:01:19,010 --> 00:01:20,780
现在由于我们还有其他许多点

23
00:01:20,780 --> 00:01:23,000
我们不想进行大幅移动 因为可能会

24
00:01:23,000 --> 00:01:26,659
无意间对所有其他的点造成错误分类

25
00:01:26,659 --> 00:01:29,750
我们希望这个线段向这个点小幅移动

26
00:01:29,750 --> 00:01:33,099
为此我们需要采取较小动作靠近这个点

27
00:01:33,099 --> 00:01:35,599
这里我们引入学习率的知识

28
00:01:35,599 --> 00:01:37,905
学习率是较小的数字 如 0.1

29
00:01:37,905 --> 00:01:41,670
我们要做的 并不是从线段坐标中

30
00:01:41,670 --> 00:01:44,135
减去 4 5 和 1

31
00:01:44,135 --> 00:01:51,109
而是用 0.1 乘以这些数 然后再从线段方程式中减去它们

32
00:01:51,109 --> 00:01:52,760
也就是说我们要从线段方程式中

33
00:01:52,760 --> 00:01:56,600
 减去 0.4 0.5 和 0.1

34
00:01:56,599 --> 00:02:04,714
得到 2.6x1 + 3.5x2 - 10.1 = 0

35
00:02:04,715 --> 00:02:07,890
这条线实际上更加靠近这个点

36
00:02:07,890 --> 00:02:11,840
同样地 如果我们有个蓝点位于红色区域

37
00:02:11,840 --> 00:02:16,393
点 (1,1) 位于负数区域 但是被标记为正

38
00:02:16,393 --> 00:02:20,919
这个点也是错误分类 应该靠拢得更近

39
00:02:20,919 --> 00:02:22,189
所以我们采用相同方法

40
00:02:22,189 --> 00:02:23,780
不是直接从线段参数中直接减去

41
00:02:23,780 --> 00:02:27,110
这个坐标

42
00:02:27,110 --> 00:02:31,250
我们再次乘以学习率 从而移动一小步

43
00:02:31,250 --> 00:02:34,139
这里我们利用点的坐标 (1,1)

44
00:02:34,139 --> 00:02:36,834
增加一个常项 1

45
00:02:36,835 --> 00:02:40,500
然后乘以学习率 0.1

46
00:02:40,500 --> 00:02:45,245
我们把它们添加到线段的参数中 得到一条新线段

47
00:02:45,245 --> 00:02:50,640
方程式是 3.1x1 + 4.1x2 - 9.9

48
00:02:50,639 --> 00:02:54,674
神奇的是 这条线更加靠近这个点

49
00:02:54,675 --> 00:02:59,000
这就是我们在感知器算法中重复使用的技巧

